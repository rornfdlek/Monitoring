"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/*
Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
SPDX-License-Identifier: Apache-2.0
*/
exports.apigw = require("./apigw");
exports.appsync = require("./appsync");
exports.autoscaling = require("./autoscaling");
exports.cloud9 = require("./cloud9");
exports.cloudfront = require("./cloudfront");
exports.cloudtrail = require("./cloudtrail");
exports.cloudwatch = require("./cloudwatch");
exports.codebuild = require("./codebuild");
exports.cognito = require("./cognito");
exports.dms = require("./dms");
exports.documentdb = require("./documentdb");
exports.dynamodb = require("./dynamodb");
exports.ec2 = require("./ec2");
exports.ecr = require("./ecr");
exports.ecs = require("./ecs");
exports.eks = require("./eks");
exports.efs = require("./efs");
exports.elasticache = require("./elasticache");
exports.elasticbeanstalk = require("./elasticbeanstalk");
exports.elb = require("./elb");
exports.emr = require("./emr");
exports.eventbridge = require("./eventbridge");
exports.glue = require("./glue");
exports.iam = require("./iam");
exports.kinesis = require("./kinesis");
exports.kms = require("./kms");
exports.lambda = require("./lambda");
exports.lex = require("./lex");
exports.mediastore = require("./mediastore");
exports.msk = require("./msk");
exports.neptune = require("./neptune");
exports.opensearch = require("./opensearch");
exports.quicksight = require("./quicksight");
exports.rds = require("./rds");
exports.redshift = require("./redshift");
exports.s3 = require("./s3");
exports.sagemaker = require("./sagemaker");
exports.secretsmanager = require("./secretsmanager");
exports.sns = require("./sns");
exports.sqs = require("./sqs");
exports.stepfunctions = require("./stepfunctions");
exports.timestream = require("./timestream");
exports.vpc = require("./vpc");
exports.waf = require("./waf");
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcnVsZXMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7O0VBR0U7QUFDRixtQ0FBaUM7QUFDakMsdUNBQXFDO0FBQ3JDLCtDQUE2QztBQUM3QyxxQ0FBbUM7QUFDbkMsNkNBQTJDO0FBQzNDLDZDQUEyQztBQUMzQyw2Q0FBMkM7QUFDM0MsMkNBQXlDO0FBQ3pDLHVDQUFxQztBQUNyQywrQkFBNkI7QUFDN0IsNkNBQTJDO0FBQzNDLHlDQUF1QztBQUN2QywrQkFBNkI7QUFDN0IsK0JBQTZCO0FBQzdCLCtCQUE2QjtBQUM3QiwrQkFBNkI7QUFDN0IsK0JBQTZCO0FBQzdCLCtDQUE2QztBQUM3Qyx5REFBdUQ7QUFDdkQsK0JBQTZCO0FBQzdCLCtCQUE2QjtBQUM3QiwrQ0FBNkM7QUFDN0MsaUNBQStCO0FBQy9CLCtCQUE2QjtBQUM3Qix1Q0FBcUM7QUFDckMsK0JBQTZCO0FBQzdCLHFDQUFtQztBQUNuQywrQkFBNkI7QUFDN0IsNkNBQTJDO0FBQzNDLCtCQUE2QjtBQUM3Qix1Q0FBcUM7QUFDckMsNkNBQTJDO0FBQzNDLDZDQUEyQztBQUMzQywrQkFBNkI7QUFDN0IseUNBQXVDO0FBQ3ZDLDZCQUEyQjtBQUMzQiwyQ0FBeUM7QUFDekMscURBQW1EO0FBQ25ELCtCQUE2QjtBQUM3QiwrQkFBNkI7QUFDN0IsbURBQWlEO0FBQ2pELDZDQUEyQztBQUMzQywrQkFBNkI7QUFDN0IsK0JBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiLypcbkNvcHlyaWdodCBBbWF6b24uY29tLCBJbmMuIG9yIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiovXG5leHBvcnQgKiBhcyBhcGlndyBmcm9tICcuL2FwaWd3JztcbmV4cG9ydCAqIGFzIGFwcHN5bmMgZnJvbSAnLi9hcHBzeW5jJztcbmV4cG9ydCAqIGFzIGF1dG9zY2FsaW5nIGZyb20gJy4vYXV0b3NjYWxpbmcnO1xuZXhwb3J0ICogYXMgY2xvdWQ5IGZyb20gJy4vY2xvdWQ5JztcbmV4cG9ydCAqIGFzIGNsb3VkZnJvbnQgZnJvbSAnLi9jbG91ZGZyb250JztcbmV4cG9ydCAqIGFzIGNsb3VkdHJhaWwgZnJvbSAnLi9jbG91ZHRyYWlsJztcbmV4cG9ydCAqIGFzIGNsb3Vkd2F0Y2ggZnJvbSAnLi9jbG91ZHdhdGNoJztcbmV4cG9ydCAqIGFzIGNvZGVidWlsZCBmcm9tICcuL2NvZGVidWlsZCc7XG5leHBvcnQgKiBhcyBjb2duaXRvIGZyb20gJy4vY29nbml0byc7XG5leHBvcnQgKiBhcyBkbXMgZnJvbSAnLi9kbXMnO1xuZXhwb3J0ICogYXMgZG9jdW1lbnRkYiBmcm9tICcuL2RvY3VtZW50ZGInO1xuZXhwb3J0ICogYXMgZHluYW1vZGIgZnJvbSAnLi9keW5hbW9kYic7XG5leHBvcnQgKiBhcyBlYzIgZnJvbSAnLi9lYzInO1xuZXhwb3J0ICogYXMgZWNyIGZyb20gJy4vZWNyJztcbmV4cG9ydCAqIGFzIGVjcyBmcm9tICcuL2Vjcyc7XG5leHBvcnQgKiBhcyBla3MgZnJvbSAnLi9la3MnO1xuZXhwb3J0ICogYXMgZWZzIGZyb20gJy4vZWZzJztcbmV4cG9ydCAqIGFzIGVsYXN0aWNhY2hlIGZyb20gJy4vZWxhc3RpY2FjaGUnO1xuZXhwb3J0ICogYXMgZWxhc3RpY2JlYW5zdGFsayBmcm9tICcuL2VsYXN0aWNiZWFuc3RhbGsnO1xuZXhwb3J0ICogYXMgZWxiIGZyb20gJy4vZWxiJztcbmV4cG9ydCAqIGFzIGVtciBmcm9tICcuL2Vtcic7XG5leHBvcnQgKiBhcyBldmVudGJyaWRnZSBmcm9tICcuL2V2ZW50YnJpZGdlJztcbmV4cG9ydCAqIGFzIGdsdWUgZnJvbSAnLi9nbHVlJztcbmV4cG9ydCAqIGFzIGlhbSBmcm9tICcuL2lhbSc7XG5leHBvcnQgKiBhcyBraW5lc2lzIGZyb20gJy4va2luZXNpcyc7XG5leHBvcnQgKiBhcyBrbXMgZnJvbSAnLi9rbXMnO1xuZXhwb3J0ICogYXMgbGFtYmRhIGZyb20gJy4vbGFtYmRhJztcbmV4cG9ydCAqIGFzIGxleCBmcm9tICcuL2xleCc7XG5leHBvcnQgKiBhcyBtZWRpYXN0b3JlIGZyb20gJy4vbWVkaWFzdG9yZSc7XG5leHBvcnQgKiBhcyBtc2sgZnJvbSAnLi9tc2snO1xuZXhwb3J0ICogYXMgbmVwdHVuZSBmcm9tICcuL25lcHR1bmUnO1xuZXhwb3J0ICogYXMgb3BlbnNlYXJjaCBmcm9tICcuL29wZW5zZWFyY2gnO1xuZXhwb3J0ICogYXMgcXVpY2tzaWdodCBmcm9tICcuL3F1aWNrc2lnaHQnO1xuZXhwb3J0ICogYXMgcmRzIGZyb20gJy4vcmRzJztcbmV4cG9ydCAqIGFzIHJlZHNoaWZ0IGZyb20gJy4vcmVkc2hpZnQnO1xuZXhwb3J0ICogYXMgczMgZnJvbSAnLi9zMyc7XG5leHBvcnQgKiBhcyBzYWdlbWFrZXIgZnJvbSAnLi9zYWdlbWFrZXInO1xuZXhwb3J0ICogYXMgc2VjcmV0c21hbmFnZXIgZnJvbSAnLi9zZWNyZXRzbWFuYWdlcic7XG5leHBvcnQgKiBhcyBzbnMgZnJvbSAnLi9zbnMnO1xuZXhwb3J0ICogYXMgc3FzIGZyb20gJy4vc3FzJztcbmV4cG9ydCAqIGFzIHN0ZXBmdW5jdGlvbnMgZnJvbSAnLi9zdGVwZnVuY3Rpb25zJztcbmV4cG9ydCAqIGFzIHRpbWVzdHJlYW0gZnJvbSAnLi90aW1lc3RyZWFtJztcbmV4cG9ydCAqIGFzIHZwYyBmcm9tICcuL3ZwYyc7XG5leHBvcnQgKiBhcyB3YWYgZnJvbSAnLi93YWYnO1xuIl19