import { IVpc } from 'aws-cdk-lib/aws-ec2';
import { QueueProcessingFargateService } from 'aws-cdk-lib/aws-ecs-patterns';
import { Bucket } from 'aws-cdk-lib/aws-s3';
import { Construct } from 'constructs';
import { BaseClass } from '../../../common/base-class';
export interface LlamaIndexDataLoaderProps {
    /**
     * The directory to build the Docker image
     * @description The directory to build the Docker image.
     * @default __dirname + '/docker'
     */
    readonly dockerImageAssetDirectory?: string;
    /**
     * The default memory
     * @description The default memory.
     * @default 2048
     */
    readonly memoryLimitMiB?: number | undefined;
    /**
     * @description the container's logging level
     * @default 'WARNING'
     */
    readonly containerLoggingLevel?: string;
    /**
     * @description the S3 output to use
     * @default undefined
     */
    readonly outputBucket?: Bucket;
    /**
     * @description the VPC to use
     * @default undefined
     */
    readonly vpc?: IVpc;
    /**
     * Value will be appended to resources name.
     *
     * @default - _dev
     */
    readonly stage?: string;
    /**
     * Enable observability. Warning: associated cost with the services
     * used. Best practive to enable by default.
     *
     * @default - true
     */
    readonly observability?: boolean;
}
export declare class LlamaIndexDataLoader extends BaseClass {
    readonly outputBucket: Bucket;
    readonly queueProcessingFargateService: QueueProcessingFargateService;
    private readonly logBucket?;
    private readonly bucketKey?;
    private readonly dockerImageAssetDirectory;
    private readonly memoryLimitMiB;
    private readonly containerLoggingLevel;
    constructor(scope: Construct, id: string, props: LlamaIndexDataLoaderProps);
}
