/**
 *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
 *  with the License. A copy of the License is located at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES
 *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions
 *  and limitations under the License.
 */
import { Duration } from 'aws-cdk-lib';
import { Dashboard } from 'aws-cdk-lib/aws-cloudwatch';
import { CfnCollection } from 'aws-cdk-lib/aws-opensearchserverless';
import { Construct } from 'constructs';
/**
 * The properties for the CollectionMonitoringProps class.
 */
export interface CollectionMonitoringProps {
    readonly period?: Duration;
    readonly clientId?: string;
}
/**
 * The properties for the CollectionMonitoringProps class.
 */
export interface IndexMonitoringProps {
    readonly period?: Duration;
    readonly clientId?: string;
}
/**
 * The properties for the BedrockCwDashboardProps class.
 */
export interface AossCwDashboardProps {
    /**
     * Optional An existing dashboard where metrics will be added to.
     * If not provided, the construct will create a new dashboard
     *
     * @default - none
     */
    readonly existingDashboard?: Dashboard;
    /**
     * Optional A name for the dashboard which will be created.
     * If existingDashboard is defined, this value will be ignored.
     * If not provided, the construct will create a new dashboard named 'BedrockMetricsDashboard'
     *
     * @default - none
     */
    readonly dashboardName?: string;
}
/**
 * The BedrockCwDashboard class.
 */
export declare class AossCwDashboard extends Construct {
    /**
     * Returns the instance of CloudWatch dashboard used by the construct
     */
    readonly dashboard: Dashboard;
    /**
     * Constructs a new instance of the AossCwDashboard class.
     * @param {cdk.App} scope - represents the scope for all the resources.
     * @param {string} id - this is a a scope-unique id.
     * @param {AossCwDashboardProps} props - user provided props for the construct.
     * @since 0.0.0
     * @public
     */
    constructor(scope: Construct, id: string, props: AossCwDashboardProps);
    addCollectionMonitoringbyAttributes(collectionName: string, collectionId: string, props: CollectionMonitoringProps): void;
    addCollectionMonitoringByCollection(collection: CfnCollection, props: CollectionMonitoringProps): void;
    addIndexMonitoringByAtributes(collectionName: string, collectionId: string, IndexName: string, IndexId: string, props: IndexMonitoringProps): void;
}
