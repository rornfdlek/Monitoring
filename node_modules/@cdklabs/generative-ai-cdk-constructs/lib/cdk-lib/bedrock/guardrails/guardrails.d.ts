/**
 *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
 *  with the License. A copy of the License is located at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES
 *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions
 *  and limitations under the License.
 */
import { IResource, Resource } from 'aws-cdk-lib';
import * as bedrock from 'aws-cdk-lib/aws-bedrock';
import * as iam from 'aws-cdk-lib/aws-iam';
import { IKey } from 'aws-cdk-lib/aws-kms';
import { Construct } from 'constructs';
import * as filters from './guardrail-filters';
/******************************************************************************
 *                              COMMON
 *****************************************************************************/
/**
 * Represents a Guardrail, either created with CDK or imported.
 */
export interface IGuardrail extends IResource {
    /**
     * The ARN of the guardrail.
     * @example "arn:aws:bedrock:us-east-1:123456789012:guardrail/yympzo398ipq"
     * @attribute
     */
    readonly guardrailArn: string;
    /**
     * The ID of the guardrail.
     * @example "yympzo398ipq"
     * @attribute
     */
    readonly guardrailId: string;
    /**
     * The version of the guardrail. If no explicit version is created,
     * this will default to "DRAFT"
     */
    guardrailVersion: string;
    /**
     * Optional KMS encryption key associated with this guardrail
     */
    readonly kmsKey?: IKey;
    /**
     * Grant the given identity permissions to apply the guardrail.
     */
    grantApply(grantee: iam.IGrantable): iam.Grant;
}
/**
 * Abstract base class for a Guardrail.
 * Contains methods and attributes valid for Guardrails either created with CDK or imported.
 */
export declare abstract class GuardrailBase extends Resource implements IGuardrail {
    /**
     * The ARN of the guardrail.
     */
    abstract readonly guardrailArn: string;
    /**
     * The ID of the guardrail.
     */
    abstract readonly guardrailId: string;
    /**
     * The ID of the guardrail.
     */
    abstract guardrailVersion: string;
    /**
     * The KMS key of the guardrail if custom encryption is configured.
     */
    abstract readonly kmsKey?: IKey;
    /**
     * Grant the given identity permissions to apply the guardrail.
     */
    grantApply(grantee: iam.IGrantable): iam.Grant;
}
/******************************************************************************
 *                        PROPS FOR NEW CONSTRUCT
 *****************************************************************************/
/**
 * Properties for creating a Guardrail.
 */
export interface GuardrailProps {
    /**
     * The name of the guardrail.
     */
    readonly name: string;
    /**
     * The description of the guardrail.
     */
    readonly description?: string;
    /**
     * The message to return when the guardrail blocks a prompt.
     *
     * @default "Sorry, your query violates our usage policy."
     */
    readonly blockedInputMessaging?: string;
    /**
     * The message to return when the guardrail blocks a model response.
     *
     * @default "Sorry, I am unable to answer your question because of our usage policy."
     */
    readonly blockedOutputsMessaging?: string;
    /**
     * A custom KMS key to use for encrypting data.
     *
     * @default "Your data is encrypted by default with a key that AWS owns and manages for you."
     */
    readonly kmsKey?: IKey;
    /**
     * The content filters to apply to the guardrail.
     * Note, if one of
     */
    readonly contentFilters?: filters.ContentFilter[];
    /**
     * Up to 30 denied topics to block user inputs or model responses associated with the topic.
     */
    readonly deniedTopics?: filters.Topic[];
    /**
     * The word filters to apply to the guardrail.
     */
    readonly wordFilters?: string[];
    /**
     * The managed word filters to apply to the guardrail.
     */
    readonly managedWordListFilters?: filters.ManagedWordFilterType[];
    /**
     * The PII filters to apply to the guardrail.
     */
    readonly piiFilters?: filters.PIIFilter[];
    /**
     * The regular expression (regex) filters to apply to the guardrail.
     */
    readonly regexFilters?: filters.RegexFilter[];
    /**
     * The contextual grounding filters to apply to the guardrail.
     */
    readonly contextualGroundingFilters?: filters.ContextualGroundingFilter[];
}
/******************************************************************************
 *                      ATTRS FOR IMPORTED CONSTRUCT
 *****************************************************************************/
export interface GuardrailAttributes {
    /**
     * The ARN of the guardrail. At least one of guardrailArn or guardrailId must be
     * defined in order to initialize a guardrail ref.
     */
    readonly guardrailArn: string;
    /**
     * The KMS key of the guardrail if custom encryption is configured.
     *
     * @default undefined - Means data is encrypted by default with a AWS-managed key
     */
    readonly kmsKey?: IKey;
    /**
     * The version of the guardrail.
     *
     * @default "DRAFT"
     */
    readonly guardrailVersion?: string;
}
/******************************************************************************
 *                        NEW CONSTRUCT DEFINITION
 *****************************************************************************/
/**
 * Class to create a Guardrail with CDK.
 */
export declare class Guardrail extends GuardrailBase {
    /**
     * Import a guardrail given its attributes
     */
    static fromGuardrailAttributes(scope: Construct, id: string, attrs: GuardrailAttributes): IGuardrail;
    /**
     * Import a low-level L1 Cfn Guardrail
     */
    static fromCfnGuardrail(cfnGuardrail: bedrock.CfnGuardrail): IGuardrail;
    /**
     * The ARN of the guardrail.
     */
    readonly guardrailArn: string;
    /**
     * The ID of the guardrail.
     */
    readonly guardrailId: string;
    /**
     * The name of the guardrail.
     */
    readonly name: string;
    /**
     * The version of the guardrail.
     * By default, this value will always be `DRAFT` unless an explicit version is created.
     * For an explicit version created, this will usually be a number (e.g. for Version 1 just enter "1")
     *
     * @example "1"
     * @default - "DRAFT"
     */
    guardrailVersion: string;
    /**
     * The KMS key used to encrypt data.
     *
     * @default undefined - "Data is encrypted by default with a key that AWS owns and manages for you"
     */
    readonly kmsKey?: IKey;
    /**
     * The content filters applied by the guardrail.
     */
    readonly contentFilters: filters.ContentFilter[];
    /**
     * The PII filters applied by the guardrail.
     */
    readonly piiFilters: filters.PIIFilter[];
    /**
     * The regex filters applied by the guardrail.
     */
    readonly regexFilters: filters.RegexFilter[];
    /**
     * The denied topic filters applied by the guardrail.
     */
    readonly deniedTopics: filters.Topic[];
    /**
     * The contextual grounding filters applied by the guardrail.
     */
    readonly contextualGroundingFilters: filters.ContextualGroundingFilter[];
    /**
     * The word filters applied by the guardrail.
     */
    readonly wordFilters: string[];
    /**
     * The managed word list filters applied by the guardrail.
     */
    readonly managedWordListFilters: filters.ManagedWordFilterType[];
    /**
     * The computed hash of the guardrail properties.
     */
    readonly hash: string;
    /**
     * The L1 representation of the guardrail
     */
    private readonly __resource;
    constructor(scope: Construct, id: string, props: GuardrailProps);
    /**
     * Adds a content filter to the guardrail.
     * @param filter The content filter to add.
     */
    addContentFilter(filter: filters.ContentFilter): void;
    /**
     * Adds a PII filter to the guardrail.
     * @param filter The PII filter to add.
     */
    addPIIFilter(filter: filters.PIIFilter): void;
    /**
     * Adds a regex filter to the guardrail.
     * @param filter The regex filter to add.
     */
    addRegexFilter(filter: filters.RegexFilter): void;
    /**
     * Adds a denied topic filter to the guardrail.
     * @param filter The denied topic filter to add.
     */
    addDeniedTopicFilter(filter: filters.Topic): void;
    /**
     * Adds a contextual grounding filter to the guardrail.
     * @param filter The contextual grounding filter to add.
     */
    addContextualGroundingFilter(filter: filters.ContextualGroundingFilter): void;
    /**
     * Adds a word filter to the guardrail.
     * @param filter The word filter to add.
     */
    addWordFilter(filter: string): void;
    /**
     * Adds a word filter to the guardrail.
     * @param filePath The location of the word filter file.
     */
    addWordFilterFromFile(filePath: string): void;
    /**
     * Adds a managed word list filter to the guardrail.
     * @param filter The managed word list filter to add.
     */
    addManagedWordListFilter(filter: filters.ManagedWordFilterType): void;
    /**
     * Create a version for the guardrail.
     * @param description The description of the version.
     * @returns The guardrail version.
     */
    createVersion(description?: string): string;
    /**
     * Returns the content filters applied to the guardrail. This method defers the computation
     * to synth time.
     */
    private generateCfnContentPolicyConfig;
    /**
     * Returns the topic filters applied to the guardrail. This method defers the computation
     * to synth time.
     */
    private generateCfnTopicPolicy;
    /**
     * Returns the contectual filters applied to the guardrail. This method defers the computation
     * to synth time.
     */
    private generateCfnContextualPolicyConfig;
    /**
     * Returns the word config applied to the guardrail. This method defers the computation
     * to synth time.
     */
    private generateCfnWordPolicyConfig;
    /**
     * Returns the word filters applied to the guardrail. This method defers the computation
     * to synth time.
     */
    private generateCfnWordConfig;
    /**
     * Returns the word filters applied to the guardrail. This method defers the computation
     * to synth time.
     */
    private generateCfnManagedWordListsConfig;
    /**
     * Returns the sensitive information config applied to the guardrail. This method defers the computation
     * to synth time.
     */
    private generateCfnSensitiveInformationPolicyConfig;
    /**
     * Returns the regex filters applied to the guardrail. This method defers the computation
     * to synth time.
     */
    private generateCfnRegexesConfig;
    /**
     * Returns the Pii filters applied to the guardrail. This method defers the computation
     * to synth time.
     */
    private generateCfnPiiEntitiesConfig;
}
