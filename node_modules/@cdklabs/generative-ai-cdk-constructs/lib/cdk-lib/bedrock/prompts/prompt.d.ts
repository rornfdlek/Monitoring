/**
 *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
 *  with the License. A copy of the License is located at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES
 *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions
 *  and limitations under the License.
 */
import { aws_kms as kms, aws_bedrock as bedrock, Resource } from 'aws-cdk-lib';
import { Grant, IGrantable } from 'aws-cdk-lib/aws-iam';
import { IKey } from 'aws-cdk-lib/aws-kms';
import { Construct } from 'constructs';
import { IInvokable } from '../models';
export declare enum PromptTemplateType {
    TEXT = "TEXT"
}
export interface CommonPromptVariantProps {
    /**
     * The name of the prompt variant.
     */
    readonly variantName: string;
    /**
     * The model which is used to run the prompt. The model could be a foundation
     * model, a custom model, or a provisioned model.
     */
    readonly model: IInvokable;
}
export interface TextPromptVariantProps extends CommonPromptVariantProps {
    /**
     * Inference configuration for the Text Prompt
     */
    readonly inferenceConfiguration?: bedrock.CfnPrompt.PromptModelInferenceConfigurationProperty;
    /**
     * The variables in the prompt template that can be filled in at runtime.
     */
    readonly promptVariables: string[];
    /**
     * The text prompt. Variables are used by encolsing its name with double curly braces
     * as in `{{variable_name}}`.
     */
    readonly promptText: string;
}
/**
 * Variants are specific sets of inputs that guide FMs on Amazon Bedrock to
 * generate an appropriate response or output for a given task or instruction.
 * You can optimize the prompt for specific use cases and models.
 */
export declare abstract class PromptVariant {
    /**
     * Static method to create a text template
     */
    static text(props: TextPromptVariantProps): PromptVariant;
    /**
     * The name of the prompt variant.
     */
    abstract name: string;
    /**
     * The type of prompt template.
     */
    abstract templateType: PromptTemplateType;
    /**
     * The inference configuration.
     */
    abstract inferenceConfiguration?: bedrock.CfnPrompt.PromptInferenceConfigurationProperty;
    /**
     * The unique identifier of the model with which to run inference on the prompt.
     */
    abstract modelId?: string;
    /**
     * The template configuration.
     */
    abstract templateConfiguration: bedrock.CfnPrompt.PromptTemplateConfigurationProperty;
    protected constructor();
}
/******************************************************************************
 *                              COMMON
 *****************************************************************************/
/**
 * Represents a Prompt, either created with CDK or imported.
 */
export interface IPrompt {
    /**
     * The ARN of the prompt.
     * @example "arn:aws:bedrock:us-east-1:123456789012:prompt/PROMPT12345"
     */
    readonly promptArn: string;
    /**
     * The ID of the prompt.
     * @example "PROMPT12345"
     */
    readonly promptId: string;
    /**
     * Optional KMS encryption key associated with this prompt.
     */
    readonly kmsKey?: IKey;
    /**
     * The version of the prompt.
     * @default - "DRAFT"
     */
    promptVersion: string;
}
/**
 * Abstract base class for a Prompt.
 * Contains methods and attributes valid for Promtps either created with CDK or imported.
 */
export declare abstract class PromptBase extends Resource implements IPrompt {
    abstract readonly promptArn: string;
    abstract readonly promptId: string;
    abstract readonly kmsKey?: IKey;
    abstract promptVersion: string;
    /**
     * Grant the given identity permissions to get the prompt.
     */
    grantGet(grantee: IGrantable): Grant;
}
/******************************************************************************
 *                        PROPS FOR NEW CONSTRUCT
 *****************************************************************************/
export interface PromptProps {
    /**
     * The name of the prompt.
     */
    readonly promptName: string;
    /**
     * A description of what the prompt does.
     * @default - No description provided.
     */
    readonly description?: string;
    /**
     * The KMS key that the prompt is encrypted with.
     * @default - AWS owned and managed key.
     */
    readonly kmsKey?: kms.IKey;
    /**
     * The Prompt Variant that will be used by default.
     * @default - No default variant provided.
     */
    readonly defaultVariant?: PromptVariant;
    /**
     * The variants of your prompt. Variants can use different messages, models,
     * or configurations so that you can compare their outputs to decide the best
     * variant for your use case. Maximum of 3 variants.
     */
    readonly variants?: PromptVariant[];
}
/******************************************************************************
 *                      ATTRS FOR IMPORTED CONSTRUCT
 *****************************************************************************/
export interface PromptAttributes {
    /**
     * The ARN of the prompt.
     * @example "arn:aws:bedrock:us-east-1:123456789012:prompt/PROMPT12345"
     */
    readonly promptArn: string;
    /**
     * Optional KMS encryption key associated with this prompt.
     */
    readonly kmsKey?: IKey;
    /**
     * The version of the prompt.
     * @default - "DRAFT"
     */
    readonly promptVersion?: string;
}
/******************************************************************************
 *                        NEW CONSTRUCT DEFINITION
 *****************************************************************************/
/**
 * Prompts are a specific set of inputs that guide FMs on Amazon Bedrock to
 * generate an appropriate response or output for a given task or instruction.
 * You can optimize the prompt for specific use cases and models.
 * @resource AWS::Bedrock::Prompt
 * @see https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-management.html
 */
export declare class Prompt extends Construct implements IPrompt {
    static fromPromptAttributes(scope: Construct, id: string, attrs: PromptAttributes): IPrompt;
    /**
     * The name of the prompt.
     */
    readonly promptName: string;
    /**
     * The KMS key that the prompt is encrypted with.
     */
    readonly kmsKey?: IKey;
    /**
     * The ARN of the prompt.
     * @example "arn:aws:bedrock:us-east-1:123456789012:prompt/PROMPT12345"
     */
    readonly promptArn: string;
    /**
     * The ID of the prompt.
     * @example "PROMPT12345"
     */
    readonly promptId: string;
    /**
     * The version of the prompt.
     */
    promptVersion: string;
    /**
     * The variants of the prompt.
     */
    readonly variants: PromptVariant[];
    /**
     * The computed hash of the prompt properties.
     * @internal
     */
    protected readonly _hash: string;
    /**
     * L1 resource
     */
    private readonly _resource;
    constructor(scope: Construct, id: string, props: PromptProps);
    /**
     * Validates whether the prompt name is valid according to the specification.
     * @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-prompt.html#cfn-bedrock-prompt-name
     */
    private validatePromptName;
    /**
     * Validates whether the number of prompt variants is respected.
     */
    private validatePromptVariants;
    /**
     * Creates a prompt version, a static snapshot of your prompt that can be
     * deployed to production.
     */
    createVersion(description?: string): string;
    /**
     * Adds a prompt variant.
     */
    addVariant(variant: PromptVariant): void;
}
