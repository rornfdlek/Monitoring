/**
 *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
 *  with the License. A copy of the License is located at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES
 *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions
 *  and limitations under the License.
 */
import * as cdk from 'aws-cdk-lib';
import { aws_bedrock as bedrock } from 'aws-cdk-lib';
import * as iam from 'aws-cdk-lib/aws-iam';
import * as kms from 'aws-cdk-lib/aws-kms';
import { Construct } from 'constructs';
import { AgentActionGroup } from './agent-action-group';
import { AgentAlias } from './agent-alias';
import { IGuardrail } from './guardrails/guardrails';
import { KnowledgeBase } from './knowledge-base';
import { IInvokable } from './models';
/**
 * The step in the agent sequence that this prompt configuration applies to.
 */
export declare enum PromptType {
    PRE_PROCESSING = "PRE_PROCESSING",
    ORCHESTRATION = "ORCHESTRATION",
    POST_PROCESSING = "POST_PROCESSING",
    KNOWLEDGE_BASE_RESPONSE_GENERATION = "KNOWLEDGE_BASE_RESPONSE_GENERATION"
}
/**
 * Specifies whether to override the default parser Lambda function when
 * parsing the raw foundation model output in the part of the agent sequence
 * defined by the promptType. If you set the field as OVERRIDEN, the
 * overrideLambda field in the PromptOverrideConfiguration must be specified
 * with the ARN of a Lambda function.
 */
export declare enum ParserMode {
    DEFAULT = "DEFAULT",
    OVERRIDDEN = "OVERRIDDEN"
}
/**
 * Specifies whether to override the default prompt template for this
 * promptType. Set this value to OVERRIDDEN to use the prompt that you
 * provide in the basePromptTemplate. If you leave it as DEFAULT, the agent
 * uses a default prompt template.
 */
export declare enum PromptCreationMode {
    DEFAULT = "DEFAULT",
    OVERRIDDEN = "OVERRIDDEN"
}
/**
 * Specifies whether to allow the agent to carry out the step specified in the
 * promptType. If you set this value to DISABLED, the agent skips that step.
 * The default state for each promptType is as follows.
 *
 *     PRE_PROCESSING – ENABLED
 *     ORCHESTRATION – ENABLED
 *     KNOWLEDGE_BASE_RESPONSE_GENERATION – ENABLED
 *     POST_PROCESSING – DISABLED
 */
export declare enum PromptState {
    ENABLED = "ENABLED",
    DISABLED = "DISABLED"
}
/** Details about the guardrail associated with the agent. */
export interface GuardrailConfiguration {
    readonly guardrailVersion?: string;
    readonly guardrailId?: string;
}
/**
 * LLM inference configuration
 */
export interface InferenceConfiguration {
    /**
     * The likelihood of the model selecting higher-probability options while
     * generating a response. A lower value makes the model more likely to choose
     * higher-probability options, while a higher value makes the model more
     * likely to choose lower-probability options.
     *
     * Floating point
     *
     * min 0
     * max 1
     */
    readonly temperature: number;
    /**
     * While generating a response, the model determines the probability of the
     * following token at each point of generation. The value that you set for
     * Top P determines the number of most-likely candidates from which the model
     * chooses the next token in the sequence. For example, if you set topP to
     * 80, the model only selects the next token from the top 80% of the
     * probability distribution of next tokens.
     *
     * Floating point
     *
     * min 0
     * max 1
     */
    readonly topP: number;
    /**
     * While generating a response, the model determines the probability of the
     * following token at each point of generation. The value that you set for
     * topK is the number of most-likely candidates from which the model chooses
     * the next token in the sequence. For example, if you set topK to 50, the
     * model selects the next token from among the top 50 most likely choices.
     *
     * Integer
     *
     * min 0
     * max 500
     */
    readonly topK: number;
    /**
     * A list of stop sequences. A stop sequence is a sequence of characters that
     * causes the model to stop generating the response.
     *
     * length 0-4
     */
    readonly stopSequences: string[];
    /**
     * The maximum number of tokens to generate in the response.
     *
     * Integer
     *
     * min 0
     * max 4096
     */
    readonly maximumLength: number;
}
/**
 * Contains configurations to override a prompt template in one part of an agent sequence.
 */
export interface PromptConfiguration {
    /**
     * The step in the agent sequence that this prompt configuration applies to.
     */
    readonly promptType: PromptType;
    /**
     * Contains inference parameters to use when the agent invokes a foundation
     * model in the part of the agent sequence defined by the promptType.
     */
    readonly inferenceConfiguration: InferenceConfiguration;
    /**
     * Defines the prompt template with which to replace the default prompt template.
     *
     * length 0-100000
     */
    readonly basePromptTemplate: string;
    /**
     * Specifies whether to override the default parser Lambda function when
     * parsing the raw foundation model output in the part of the agent sequence
     * defined by the promptType. If you set the field as OVERRIDEN, the
     * overrideLambda field in the PromptOverrideConfiguration must be specified
     * with the ARN of a Lambda function.
     */
    readonly parserMode?: ParserMode;
    /**
     * Specifies whether to override the default prompt template for this
     * promptType. Set this value to OVERRIDDEN to use the prompt that you
     * provide in the basePromptTemplate. If you leave it as DEFAULT, the agent
     * uses a default prompt template.
     */
    readonly promptCreationMode: PromptCreationMode;
    /**
     * Specifies whether to allow the agent to carry out the step specified in
     * the promptType. If you set this value to DISABLED, the agent skips that
     * step. The default state for each promptType is as follows.
     *
     *     PRE_PROCESSING – ENABLED
     *     ORCHESTRATION – ENABLED
     *     KNOWLEDGE_BASE_RESPONSE_GENERATION – ENABLED
     *     POST_PROCESSING – DISABLED
     */
    readonly promptState: PromptState;
}
/**
 * Contains configurations to override prompts in different parts of an agent sequence.
 */
export interface PromptOverrideConfiguration {
    /**
     * Contains configurations to override a prompt template in one part of an agent sequence.
     */
    readonly promptConfigurations: PromptConfiguration[];
    /**
     * The ARN of the Lambda function to use when parsing the raw foundation
     * model output in parts of the agent sequence. If you specify this field,
     * at least one of the promptConfigurations must contain a parserMode value
     * that is set to OVERRIDDEN.
     */
    readonly overrideLambda?: string;
}
/**
 * Properties for a Bedrock Agent.
 */
export interface AgentProps {
    /**
     * The Bedrock text foundation model for the agent to use.
     */
    readonly foundationModel: IInvokable;
    /**
     * The name of the agent.
     *
     * @default - A name is automatically generated.
     */
    readonly name?: string;
    /**
     * The existing IAM Role for the agent with a trust policy that
     * allows the Bedrock service to assume the role.
     */
    readonly existingRole?: iam.Role;
    /**
     * A narrative instruction to provide the agent as context.
     */
    readonly instruction: string;
    /**
     * A description of the agent.
     *
     * @default - No description is provided.
     */
    readonly description?: string;
    /**
     * Knowledge Bases to make available to the agent.
     *
     * @default - No knowledge base is used.
     */
    readonly knowledgeBases?: KnowledgeBase[];
    /**
     * AgentActionGroup to make available to the agent.
     *
     * @default - No AgentActionGroup  is used.
     */
    readonly actionGroups?: AgentActionGroup[];
    /** Guardrail configuration
     *
     * Warning: If you provide a guardrail configuration through the constructor,
     * you will need to provide the correct permissions for your agent to access
     * the guardrails. If you want the permissions to be configured on your behalf,
     * use the addGuardrail method.
     * @default - No guardrails associated to the agent.
     */
    readonly guardrailConfiguration?: GuardrailConfiguration;
    /**
     * Select whether the agent can prompt additional
     * information from the user when it does not have
     * enough information to respond to an utterance
     *
     * @default - False
     */
    readonly enableUserInput?: boolean;
    /**
     * How long sessions should be kept open for the agent.
     *
     * @default - 1 hour
     */
    readonly idleSessionTTL?: cdk.Duration;
    /**
     * KMS encryption key to use for the agent.
     *
     * @default - An AWS managed key is used.
     */
    readonly encryptionKey?: kms.IKey;
    /**
     * Overrides for the agent.
     *
     * @default - No overrides are provided.
     */
    readonly promptOverrideConfiguration?: PromptOverrideConfiguration;
    /**
     * Name of the alias for the agent.
     *
     * @default - No alias is created.
     */
    readonly aliasName?: string;
    /**
     * Whether to prepare the agent for use.
     *
     * @default - false
     */
    readonly shouldPrepareAgent?: boolean;
    /**
     * OPTIONAL: Tag (KEY-VALUE) bedrock agent resource
     *
     * @default - false
     */
    readonly tags?: Record<string, string>;
}
/**
 * Properties to add an Alias to an Agent
 */
export interface AddAgentAliasProps {
    /**
     * The name for the agent alias.
     */
    readonly aliasName: string;
    /**
     * The version of the agent to associate with the agent alias.
     *
     * @default - Creates a new version of the agent.
     */
    readonly agentVersion?: string;
    /**
     * Description for the agent alias.
     *
     */
    readonly description?: string;
}
/**
 * Deploy a Bedrock Agent.
 */
export declare class Agent extends Construct {
    /**
     * The name of the agent.
     */
    readonly name: string;
    /**
     * The IAM role for the agent.
     */
    readonly role: iam.Role;
    /**
     * The model used by the agent.
     */
    readonly foundationModel: IInvokable;
    /**
     * The unique identifier of the agent.
     */
    readonly agentId: string;
    /**
     * Instance of Agent
     */
    readonly agentInstance: bedrock.CfnAgent;
    /**
     * The ARN of the agent.
     */
    readonly agentArn: string;
    /**
     * The unique identifier of the agent alias.
     */
    readonly aliasId?: string;
    /**
     * The ARN of the agent alias.
     */
    readonly aliasArn?: string;
    /**
     * The name for the agent alias.
     */
    readonly aliasName?: string;
    /**
     * The version for the agent
     */
    readonly agentversion: string;
    /**
     * A list of values to indicate if PrepareAgent or an Alias needs to be updated.
     * @private
     */
    private resourceUpdates;
    /**
     * A list of action groups associated with the agent
     * @private
     */
    actionGroups: bedrock.CfnAgent.AgentActionGroupProperty[];
    /**
     * A list of KnowledgeBases associated with the agent.
     *
     * @default - No knowledge base is used.
     */
    knowledgeBases: bedrock.CfnAgent.AgentKnowledgeBaseProperty[];
    constructor(scope: Construct, id: string, props: AgentProps);
    /**
     * Add an alias to the agent.
     */
    addAlias(props: AddAgentAliasProps): AgentAlias;
    /**
     * Add knowledge bases to the agent.
     */
    addKnowledgeBases(knowledgeBases: KnowledgeBase[]): void;
    /**
     * Add knowledge base to the agent.
     */
    addKnowledgeBase(knowledgeBase: KnowledgeBase): void;
    /**
     * Add action group to the agent.
     */
    addActionGroup(actionGroup: AgentActionGroup): void;
    /**
     * Add action groups to the agent.
     */
    addActionGroups(actionGroups: AgentActionGroup[]): void;
    /**
     * Add guardrail to the agent.
     */
    addGuardrail(guardrail: IGuardrail): void;
    /**
     * Register a dependency for aliases.
     *
     * @param updatedAt - The updatedAt of the resource that will be registered as a dependency.
     *
     * @internal This is an internal core function and should not be called directly.
     */
    _addAliasDependency(updatedAt: string): void;
}
/**
 * Validate the inferenceConfiguration of a prompt override.
 *
 * @internal This is an internal core function and should not be called directly.
 */
export declare function validateInferenceConfiguration(inferenceConfiguration: InferenceConfiguration): void;
/**
 * Validate the promptOverrideConfiguration.
 *
 * @internal This is an internal core function and should not be called directly.
 */
export declare function validatePromptOverrideConfiguration(promptOverrideConfiguration: PromptOverrideConfiguration | undefined): void;
