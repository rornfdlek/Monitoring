import { IKey } from 'aws-cdk-lib/aws-kms';
import { IBucket } from 'aws-cdk-lib/aws-s3';
import { Construct } from 'constructs';
import { IKnowledgeBase } from './../knowledge-base';
import { DataSourceAssociationProps, DataSourceNew, DataSourceType } from './base-data-source';
/**
 * Interface to add a new S3DataSource to an existing KB
 */
export interface S3DataSourceAssociationProps extends DataSourceAssociationProps {
    /**
     * The bucket that contains the data source.
     */
    readonly bucket: IBucket;
    /**
     * The prefixes of the objects in the bucket that should be included in the data source.
     *
     * @default - All objects in the bucket.
     */
    readonly inclusionPrefixes?: string[];
}
/**
 * Interface to create a new S3 Data Source object.
 */
export interface S3DataSourceProps extends S3DataSourceAssociationProps {
    /**
     * The knowledge base to associate with the data source.
     */
    readonly knowledgeBase: IKnowledgeBase;
}
/**
 * Sets up an S3 Data Source to be added to a knowledge base.
 */
export declare class S3DataSource extends DataSourceNew {
    /**
     * The unique identifier of the data source.
     * @example 'JHUEVXUZMU'
     */
    readonly dataSourceId: string;
    /**
     * The type of data source.
     */
    readonly dataSourceType: DataSourceType;
    /**
     * The name of the data source.
     */
    readonly dataSourceName: string;
    /**
     * The knowledge base associated with the data source.
     */
    readonly knowledgeBase: IKnowledgeBase;
    /**
     * The KMS key to use to encrypt the data source.
     */
    readonly kmsKey?: IKey;
    /**
     * The bucket associated with the data source.
     */
    readonly bucket: IBucket;
    /**
     * The Data Source cfn resource.
     */
    private readonly __resource;
    constructor(scope: Construct, id: string, props: S3DataSourceProps);
}
