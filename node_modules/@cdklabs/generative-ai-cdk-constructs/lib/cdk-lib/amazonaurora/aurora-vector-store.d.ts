/**
 *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
 *  with the License. A copy of the License is located at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES
 *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions
 *  and limitations under the License.
 */
import * as cdk from 'aws-cdk-lib';
import * as ec2 from 'aws-cdk-lib/aws-ec2';
import * as iam from 'aws-cdk-lib/aws-iam';
import * as rds from 'aws-cdk-lib/aws-rds';
import * as secretsmanager from 'aws-cdk-lib/aws-secretsmanager';
import { Construct } from 'constructs';
/**
 * List of supported versions of PostgreSQL for Aurora cluster.
 */
export declare const SupportedPostgreSQLVersions: {
    readonly AURORA_POSTGRESQL_V12_16: cdk.aws_rds.AuroraPostgresEngineVersion;
    readonly AURORA_POSTGRESQL_V13_12: cdk.aws_rds.AuroraPostgresEngineVersion;
    readonly AURORA_POSTGRESQL_V14_9: cdk.aws_rds.AuroraPostgresEngineVersion;
    readonly AURORA_POSTGRESQL_V15_4: cdk.aws_rds.AuroraPostgresEngineVersion;
    readonly AURORA_POSTGRESQL_V15_5: cdk.aws_rds.AuroraPostgresEngineVersion;
};
export type SupportedPostgreSQLVersions = typeof SupportedPostgreSQLVersions[keyof typeof SupportedPostgreSQLVersions];
/**
 * Base properties for an Aurora Vector Store.
 */
export interface BaseAuroraVectorStoreProps {
    /**
     * The schema name for the Aurora Vector Store.
     */
    readonly schemaName?: string;
    /**
     * The field name for the vector column in the Aurora Vector Store.
     */
    readonly vectorField?: string;
    /**
     * The field name for the text column in the Aurora Vector Store.
     */
    readonly textField?: string;
    /**
     * The field name for the metadata column in the Aurora Vector Store.
     */
    readonly metadataField?: string;
    /**
     * The name of the table for the Aurora Vector Store.
     */
    readonly tableName?: string;
    /**
     * The primary key field for the Aurora Vector Store table.
     */
    readonly primaryKeyField?: string;
    /**
     * The embeddings model dimension used for the Aurora Vector Store.
     * The vector dimensions of the model must match the dimensions
     * used in the KnowledgeBase construct.
     */
    readonly embeddingsModelVectorDimension: number;
}
/**
 * Properties for configuring an Amazon Aurora Vector Store.
 */
export interface AmazonAuroraVectorStoreProps extends BaseAuroraVectorStoreProps {
    /**
     * The name of the database for the Aurora Vector Store.
     */
    readonly databaseName?: string;
    /**
     * The version of PostgreSQL to use for the Aurora Vector Store.
     * By default, the latest supported version will be used.
     */
    readonly postgreSQLVersion?: SupportedPostgreSQLVersions;
    /**
     * User's VPC in which they want to deploy Aurora Database.
     */
    readonly vpc?: ec2.IVpc;
}
/**
 * Properties for an existing Aurora Vector Store.
 * You database must have TCP/IP port that the
 * database will use for application connections
 * set up for `5432`.
 */
export interface ExistingAmazonAuroraVectorStoreProps extends BaseAuroraVectorStoreProps {
    /**
     * The name of the database for the Aurora Vector Store.
     */
    readonly databaseName: string;
    /**
     * The unique cluster identifier of your Aurora RDS cluster.
     */
    readonly clusterIdentifier: string;
    /**
     * The VPC in which the existing Aurora Vector Store is located.
     */
    readonly vpc: ec2.IVpc;
    /**
     * The secret containing the database credentials.
     * The secret must contain `host`, `port`, `username`,
     * `password` and `dbname` values.
     */
    readonly secret: secretsmanager.ISecret;
    /**
     * The id of the security group associated with the RDS Aurora instance.
     * This security group allows access to the Aurora Vector Store from Lambda's
     * custom resource running pgVector SQL commands.
     */
    readonly auroraSecurityGroupId: string;
}
/**
 * Interface representing the resources required for a database cluster.
 */
export interface DatabaseClusterResources {
    /**
     * The Amazon Aurora RDS cluster.
     */
    readonly auroraCluster?: rds.DatabaseCluster;
    /**
     * The ARN of your existing Amazon Aurora DB cluster.
     */
    readonly resourceArn: string;
    /**
     * The unique cluster identifier of the Aurora RDS cluster.
     */
    readonly clusterIdentifier: string;
    /**
     * The VPC in which the database cluster is located.
     */
    readonly vpc: ec2.IVpc;
    /**
     * The secret containing the database credentials.
     * The secret must contain `username` and `password` values.
     */
    readonly secret: secretsmanager.ISecret;
    /**
     * The security group associated with the Aurora cluster.
     */
    readonly auroraSecurityGroup: ec2.SecurityGroup;
}
/**
 * Base class for Amazon Aurora Vector Store.
 * Handles both the creation of a new Aurora Vector Store or the usage of an existing Aurora Vector Store.
 */
declare abstract class BaseAmazonAuroraVectorStore extends Construct {
    /**
     * The schema name for the Aurora Vector Store.
     */
    readonly schemaName: string;
    /**
     * The field name for the vector column in the Aurora Vector Store.
     */
    readonly vectorField: string;
    /**
     * The field name for the text column in the Aurora Vector Store.
     */
    readonly textField: string;
    /**
     * The field name for the metadata column in the Aurora Vector Store.
     */
    readonly metadataField: string;
    /**
     * The name of the database for the Aurora Vector Store.
     */
    readonly databaseName: string;
    /**
     * The name of the table for the Aurora Vector Store.
     */
    readonly tableName: string;
    /**
     * The primary key field for the Aurora Vector Store table.
     */
    readonly primaryKeyField: string;
    /**
     * The embeddings model dimension used for the Aurora Vector Store.
     * The vector dimensions of the model must match the dimensions
     * used in the KnowledgeBase construct.
     */
    readonly embeddingsModelVectorDimension: number;
    constructor(scope: Construct, id: string, props: AmazonAuroraVectorStoreProps | ExistingAmazonAuroraVectorStoreProps);
    protected createAuroraPgCRPolicy(clusterIdentifier: string): iam.ManagedPolicy;
    protected generateResourceArn(clusterIdentifier: string): string;
    protected setupDatabaseClusterResources(vpc: ec2.IVpc, secret: secretsmanager.ISecret, clusterIdentifier: string, auroraSecurityGroupId: string): DatabaseClusterResources;
    protected createLambdaSecurityGroup(vpc: ec2.IVpc): ec2.SecurityGroup;
    protected addIngressRuleToAuroraSecurityGroup(lambdaSecurityGroup: ec2.SecurityGroup, auroraSecurityGroup: ec2.SecurityGroup): void;
    protected setupCustomResource(databaseClusterResources: DatabaseClusterResources, lambdaSecurityGroup: ec2.SecurityGroup, auroraPgCRPolicy: iam.ManagedPolicy): cdk.CustomResource;
}
export declare class ExistingAmazonAuroraVectorStore extends BaseAmazonAuroraVectorStore {
    /**
     * The ARN of your Amazon Aurora DB cluster.
     */
    readonly resourceArn: string;
    /**
     * The Secret ARN of your Amazon Aurora DB cluster.
     */
    readonly credentialsSecretArn: string;
    /**
     * The VPC of your Amazon Aurora DB cluster.
     */
    readonly vpc: ec2.IVpc;
    constructor(scope: Construct, id: string, props: ExistingAmazonAuroraVectorStoreProps);
}
export declare class AmazonAuroraVectorStore extends BaseAmazonAuroraVectorStore {
    /**
     * Creates an instance of AmazonAuroraVectorStore using existing Aurora Vector Store properties.
     * You need to provide your existing Aurora Vector Store properties
     * such as `databaseName`, `clusterIdentifier`, `vpc` where database is deployed,
     * `secret` containing username and password for authentication to database,
     * and `auroraSecurityGroupId` with the value of a security group id that was
     * used for the database.
     *
     * @param scope - The scope in which to define the construct.
     * @param id - The ID of the construct.
     * @param props - The properties of the existing Aurora Vector Store.
     * @returns An instance of AmazonAuroraVectorStore.
     */
    static fromExistingAuroraVectorStore(scope: Construct, id: string, props: ExistingAmazonAuroraVectorStoreProps): ExistingAmazonAuroraVectorStore;
    /**
     * The ARN of your Amazon Aurora DB cluster.
     */
    readonly resourceArn: string;
    /**
     * The Secret ARN of your Amazon Aurora DB cluster.
     */
    readonly credentialsSecretArn: string;
    /**
     * The VPC of your Amazon Aurora DB cluster.
     */
    readonly vpc: ec2.IVpc;
    constructor(scope: Construct, id: string, props: AmazonAuroraVectorStoreProps);
    private createDatabaseCluster;
}
export {};
