"use strict";
/**
 *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
 *  with the License. A copy of the License is located at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES
 *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions
 *  and limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokenFilterType = exports.TokenizerType = exports.CharacterFilterType = void 0;
var CharacterFilterType;
(function (CharacterFilterType) {
    CharacterFilterType["ICU_NORMALIZER"] = "icu_normalizer";
})(CharacterFilterType || (exports.CharacterFilterType = CharacterFilterType = {}));
// Currently we only support Kuromoji and ICU tokenizers.
// Also see the following link for more information regarding supported plugins:
// https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-genref.html#serverless-plugins
var TokenizerType;
(function (TokenizerType) {
    TokenizerType["KUROMOJI_TOKENIZER"] = "kuromoji_tokenizer";
    TokenizerType["ICU_TOKENIZER"] = "icu_tokenizer";
})(TokenizerType || (exports.TokenizerType = TokenizerType = {}));
var TokenFilterType;
(function (TokenFilterType) {
    TokenFilterType["KUROMOJI_BASEFORM"] = "kuromoji_baseform";
    TokenFilterType["KUROMOJI_PART_OF_SPEECH"] = "kuromoji_part_of_speech";
    TokenFilterType["KUROMOJI_STEMMER"] = "kuromoji_stemmer";
    TokenFilterType["CJK_WIDTH"] = "cjk_width";
    TokenFilterType["JA_STOP"] = "ja_stop";
    TokenFilterType["LOWERCASE"] = "lowercase";
    TokenFilterType["ICU_FOLDING"] = "icu_folding";
})(TokenFilterType || (exports.TokenFilterType = TokenFilterType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5hbHlzaXMtcGx1Z2lucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jZGstbGliL29wZW5zZWFyY2hzZXJ2ZXJsZXNzL2FuYWx5c2lzLXBsdWdpbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7OztHQVdHOzs7QUFFSCxJQUFZLG1CQUVYO0FBRkQsV0FBWSxtQkFBbUI7SUFDN0Isd0RBQWlDLENBQUE7QUFDbkMsQ0FBQyxFQUZXLG1CQUFtQixtQ0FBbkIsbUJBQW1CLFFBRTlCO0FBRUQseURBQXlEO0FBQ3pELGdGQUFnRjtBQUNoRixpSEFBaUg7QUFDakgsSUFBWSxhQUdYO0FBSEQsV0FBWSxhQUFhO0lBQ3ZCLDBEQUF5QyxDQUFBO0lBQ3pDLGdEQUErQixDQUFBO0FBQ2pDLENBQUMsRUFIVyxhQUFhLDZCQUFiLGFBQWEsUUFHeEI7QUFFRCxJQUFZLGVBUVg7QUFSRCxXQUFZLGVBQWU7SUFDekIsMERBQXVDLENBQUE7SUFDdkMsc0VBQW1ELENBQUE7SUFDbkQsd0RBQXFDLENBQUE7SUFDckMsMENBQXVCLENBQUE7SUFDdkIsc0NBQW1CLENBQUE7SUFDbkIsMENBQXVCLENBQUE7SUFDdkIsOENBQTJCLENBQUE7QUFDN0IsQ0FBQyxFQVJXLGVBQWUsK0JBQWYsZUFBZSxRQVExQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogIENvcHlyaWdodCBBbWF6b24uY29tLCBJbmMuIG9yIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpLiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiAgd2l0aCB0aGUgTGljZW5zZS4gQSBjb3B5IG9mIHRoZSBMaWNlbnNlIGlzIGxvY2F0ZWQgYXRcbiAqXG4gKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqICBvciBpbiB0aGUgJ2xpY2Vuc2UnIGZpbGUgYWNjb21wYW55aW5nIHRoaXMgZmlsZS4gVGhpcyBmaWxlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICdBUyBJUycgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFU1xuICogIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zXG4gKiAgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmV4cG9ydCBlbnVtIENoYXJhY3RlckZpbHRlclR5cGUge1xuICBJQ1VfTk9STUFMSVpFUiA9ICdpY3Vfbm9ybWFsaXplcicsXG59XG5cbi8vIEN1cnJlbnRseSB3ZSBvbmx5IHN1cHBvcnQgS3Vyb21vamkgYW5kIElDVSB0b2tlbml6ZXJzLlxuLy8gQWxzbyBzZWUgdGhlIGZvbGxvd2luZyBsaW5rIGZvciBtb3JlIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBzdXBwb3J0ZWQgcGx1Z2luczpcbi8vIGh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9vcGVuc2VhcmNoLXNlcnZpY2UvbGF0ZXN0L2RldmVsb3Blcmd1aWRlL3NlcnZlcmxlc3MtZ2VucmVmLmh0bWwjc2VydmVybGVzcy1wbHVnaW5zXG5leHBvcnQgZW51bSBUb2tlbml6ZXJUeXBlIHtcbiAgS1VST01PSklfVE9LRU5JWkVSID0gJ2t1cm9tb2ppX3Rva2VuaXplcicsXG4gIElDVV9UT0tFTklaRVIgPSAnaWN1X3Rva2VuaXplcicsXG59XG5cbmV4cG9ydCBlbnVtIFRva2VuRmlsdGVyVHlwZSB7XG4gIEtVUk9NT0pJX0JBU0VGT1JNID0gJ2t1cm9tb2ppX2Jhc2Vmb3JtJyxcbiAgS1VST01PSklfUEFSVF9PRl9TUEVFQ0ggPSAna3Vyb21vamlfcGFydF9vZl9zcGVlY2gnLFxuICBLVVJPTU9KSV9TVEVNTUVSID0gJ2t1cm9tb2ppX3N0ZW1tZXInLFxuICBDSktfV0lEVEggPSAnY2prX3dpZHRoJyxcbiAgSkFfU1RPUCA9ICdqYV9zdG9wJyxcbiAgTE9XRVJDQVNFID0gJ2xvd2VyY2FzZScsXG4gIElDVV9GT0xESU5HID0gJ2ljdV9mb2xkaW5nJyxcbn1cbiJdfQ==